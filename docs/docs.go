// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/clear-user-group-subscriptions": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "UserGroupSubscriptions"
                ],
                "summary": "Clear user group subscriptions",
                "parameters": [
                    {
                        "description": "User group subscriptions clean",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/forms.ClearUserGroupSubscriptions"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/api/clear-user-interlocutor-subscriptions": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "UserInterlocutorSubscriptions"
                ],
                "summary": "Clear all user interlocutor subscriptions for specific user",
                "parameters": [
                    {
                        "description": "User interlocutor subscriptions clean",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/forms.ClearUserInterlocutorSubscriptions"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/api/create-user-group-subscriptions": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "UserGroupSubscriptions"
                ],
                "summary": "Create user group subscriptions",
                "parameters": [
                    {
                        "description": "User group subscriptions creation",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/forms.CreateUserGroupSubscriptions"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/api/create-user-interlocutor-subscriptions": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "UserInterlocutorSubscriptions"
                ],
                "summary": "Clear user interlocutor subscriptions",
                "parameters": [
                    {
                        "description": "User interlocutor subscriptions clean",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/forms.CreateUserInterlocutorSubscriptions"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/api/publish-message-to-user-channels": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Publish message to users",
                "parameters": [
                    {
                        "description": "Message to users",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/forms.PublishMessageToUsers"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/api/publish-message-to-user-group": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Publish message to group",
                "parameters": [
                    {
                        "description": "Message to group",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/forms.PublishMessageToUserGroup"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/api/remove-user-group-subscriptions": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "UserGroupSubscriptions"
                ],
                "summary": "Remove user group subscriptions",
                "parameters": [
                    {
                        "description": "User group subscriptions removing",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/forms.RemoveUserGroupSubscriptions"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/api/remove-user-interlocutor-subscriptions": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "UserInterlocutorSubscriptions"
                ],
                "summary": "Remove set of user interlocutor subscriptions for specific user",
                "parameters": [
                    {
                        "description": "User interlocutor subscriptions removing",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/forms.RemoveUserInterlocutorSubscriptions"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        }
    },
    "definitions": {
        "forms.ClearUserGroupSubscriptions": {
            "type": "object",
            "required": [
                "groupId"
            ],
            "properties": {
                "groupId": {
                    "type": "integer"
                }
            }
        },
        "forms.ClearUserInterlocutorSubscriptions": {
            "type": "object",
            "required": [
                "userId"
            ],
            "properties": {
                "userId": {
                    "type": "integer"
                }
            }
        },
        "forms.CreateUserGroupSubscriptions": {
            "type": "object",
            "required": [
                "groupId",
                "userIds"
            ],
            "properties": {
                "groupId": {
                    "type": "integer"
                },
                "userIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "forms.CreateUserInterlocutorSubscriptions": {
            "type": "object",
            "required": [
                "interlocutorIds",
                "userId"
            ],
            "properties": {
                "interlocutorIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "userId": {
                    "type": "integer"
                }
            }
        },
        "forms.PublishMessageToUserGroup": {
            "type": "object",
            "required": [
                "groupId",
                "message"
            ],
            "properties": {
                "groupId": {
                    "type": "integer"
                },
                "message": {
                    "type": "object"
                }
            }
        },
        "forms.PublishMessageToUsers": {
            "type": "object",
            "required": [
                "message",
                "userIds"
            ],
            "properties": {
                "message": {
                    "type": "object"
                },
                "userIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "forms.RemoveUserGroupSubscriptions": {
            "type": "object",
            "required": [
                "groupId",
                "userIds"
            ],
            "properties": {
                "groupId": {
                    "type": "integer"
                },
                "userIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "forms.RemoveUserInterlocutorSubscriptions": {
            "type": "object",
            "required": [
                "interlocutorIds",
                "userId"
            ],
            "properties": {
                "interlocutorIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "userId": {
                    "type": "integer"
                }
            }
        },
        "httputil.HTTPError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 400
                },
                "message": {
                    "type": "string",
                    "example": "status bad request"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Websocket manager API",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
